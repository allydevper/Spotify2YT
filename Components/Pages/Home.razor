@page "/"
@rendermode InteractiveServer
@using Spotify2YT.States;
@inject IConfiguration Configuration
@inject NavigationManager Navigation
@inject MainStateService<string, string> MainState

<header class="container my-5">
    <h1 class="title">
        Sincroniza tu lista de <span class="spotify-text">Spotify</span> con tu<br> cuenta de <span class="youtube-text">Youtube</span>
    </h1>
    <p class="text-secondary">
        Con tus credenciales de desarrollador de Spotify y YouTube<br> puedes sincronizar tus
        listas de reproduccion.
    </p>
</header>
<div class="container text-center">
    <div class="d-flex justify-content-center gap-3 mt-4">
        <!-- Spotify Button -->
        <button class="btn btn-spotify btn-lg px-4 @(MainState.ActiveSpotify ? "btn-spotify-active" : "")"
                type="button"
                @onclick="ConnectSpotify">
            <span>
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                     fill="currentColor" class="icon icon-tabler icons-tabler-filled icon-tabler-brand-spotify">
                    <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                    <path d="M17 3.34a10 10 0 1 1 -15 8.66l.005 -.324a10 10 0 0 1 14.995 -8.336m-2.168 11.605c-1.285 -1.927 -4.354 -2.132 -6.387 -.777a1 1 0 0 0 1.11 1.664c1.195 -.797 3.014 -.675 3.613 .223a1 1 0 1 0 1.664 -1.11m1.268 -3.245c-2.469 -1.852 -5.895 -2.187 -8.608 -.589a1 1 0 0 0 1.016 1.724c1.986 -1.171 4.544 -.92 6.392 .465a1 1 0 0 0 1.2 -1.6m1.43 -3.048c-3.677 -2.298 -7.766 -2.152 -10.977 -.546a1 1 0 0 0 .894 1.788c2.635 -1.317 5.997 -1.437 9.023 .454a1 1 0 1 0 1.06 -1.696" />
                </svg>
            </span>
            @(MainState.ActiveSpotify ? "Spotify Conectado" : "Conecta Spotify")
        </button>
        <!-- YouTube Button -->
        <button class="btn btn-youtube btn-lg px-4 @(MainState.ActiveYT ? "btn-youtube-active" : "")"
                type="button">
            <span>
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                     fill="currentColor" class="icon icon-tabler icons-tabler-filled icon-tabler-brand-youtube">
                    <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                    <path d="M18 3a5 5 0 0 1 5 5v8a5 5 0 0 1 -5 5h-12a5 5 0 0 1 -5 -5v-8a5 5 0 0 1 5 -5zm-9 6v6a1 1 0 0 0 1.514 .857l5 -3a1 1 0 0 0 0 -1.714l-5 -3a1 1 0 0 0 -1.514 .857z" />
                </svg>
            </span>
            <span>
                @(MainState.ActiveYT ? "YouTube Conectado" : "Conecta YouTube")
            </span>
        </button>
    </div>
</div>

<section class="container my-5">
    <h2 class="text-center mb-4">Ingresa el id del playlist de Spotify</h2>
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="input-group mt-2">
                <input type="text" class="form-control input-custom" placeholder="Playlist Id">
                <button class="btn btn-custom">Obtener</button>
            </div>
        </div>
    </div>
</section>

<section class="container text-center my-5">
    <button class="btn btn-custom px-4">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
             viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
             stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-refresh">
            <path stroke="none" d="M0 0h24v24H0z" fill="none" />
            <path d="M20 11a8.1 8.1 0 0 0 -15.5 -2m-.5 -4v4h4" />
            <path d="M4 13a8.1 8.1 0 0 0 15.5 2m.5 4v-4h-4" />
        </svg>
        Comienza la sincronización
    </button>
    <div class="row justify-content-center my-2">
        <div class="col-md-4">
            <div class="input-group mt-2">
                <input type="text" class="form-control input-custom" placeholder="Nuevo nombre de Playlist">
            </div>
        </div>
    </div>
</section>

@code{

    protected override void OnInitialized()
    {
        var demo = MainState.ActiveSpotify;
    }

    private async Task ConnectSpotify()
    {
        if (!MainState.ActiveSpotify)
        {
            await MainState.SaveStateActiveSpotifyAsync(true);
            Navigation.NavigateTo("/callback");
        }
    }
}